var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.743,1,0.996]],["body/components/AppComponent.html",[0,1.002,1,1.469,2,1.529,3,0.508,4,0.689,5,1.449,6,1.738,7,1.738,8,1.234,9,0.508,10,0.796,11,0.52,12,0.52,13,1.449,14,1.449,15,1.776,16,1.449,17,2.081,18,0.993,19,1.343,20,2.501,21,2.931,22,2.501,23,2.501,24,0.508,25,1.146,26,1.809,27,3.206,28,1.096,29,1.959,30,1.791,31,1.776,32,2.512,33,2.444,34,2.277,35,2.501,36,2.081,37,2.081,38,2.081,39,1.323,40,1.738,41,1.271,42,2.931,43,1.959,44,2.081,45,2.277,46,2.01,47,2.175,48,1.062,49,0.058,50,1.791,51,0.993,52,0.796,53,2.086,54,2.589,55,2.175,56,2.175,57,2.175,58,2.175,59,1.062,60,2.444,61,2.931,62,2.175,63,2.501,64,2.501,65,2.501,66,2.175,67,1.791,68,2.081,69,2.086,70,2.175,71,2.501,72,2.175,73,2.501,74,2.501,75,2.501,76,2.175,77,1.347,78,1.738,79,1.234,80,1.738,81,2.277,82,1.738,83,1.234,84,0.594,85,0.508,86,1.234,87,1.738,88,1.234,89,1.323,90,1.062,91,0.919,92,0.992,93,0.594,94,0.796,95,1.062,96,1.146,97,1.062,98,1.738,99,0.689,100,1.271,101,1.695,102,0.919,103,0.919,104,0.796,105,0.919,106,1.738,107,0.919,108,2.086,109,1.738,110,1.738,111,1.738,112,1.738,113,2.501,114,1.738,115,1.738,116,1.449,117,1.738,118,2.412,119,1.738,120,1.449,121,1.234,122,1.738,123,3.397,124,1.738,125,3.397,126,1.738,127,3.397,128,1.738,129,2.501,130,2.931,131,2.951,132,2.501,133,2.277,134,1.738,135,1.738,136,1.738,137,2.175,138,2.501,139,1.738,140,1.738,141,2.501,142,1.776,143,1.738,144,3.206,145,1.738,146,1.738,147,0.796,148,1.234,149,1.738,150,1.738,151,0.023,152,0.033,153,0.023]],["title/modules/AppModule.html",[154,1.812,155,1.543]],["body/modules/AppModule.html",[1,1.875,3,0.756,4,1.025,9,0.756,10,0.676,11,0.479,12,0.479,18,0.756,26,1.185,31,1.836,34,1.836,46,1.367,49,0.057,59,1.58,77,1.603,84,0.883,85,0.756,92,1.025,99,1.025,101,1.367,147,1.824,148,1.836,151,0.034,152,0.043,153,0.034,155,2.954,156,1.58,157,2.001,158,2.585,159,2.585,160,2.585,161,2.433,162,2.73,163,2.156,164,3.236,165,4.098,166,4.098,167,3.273,168,4.497,169,3.236,170,3.273,171,4.098,172,4.727,173,3.273,174,3.236,175,2.585,176,4.098,177,2.585,178,1.836,179,2.585,180,2.156,181,1.367,182,3.236,183,3.236,184,4.098,185,2.585,186,2.585,187,3.236,188,4.098,189,3.236,190,3.236,191,3.236]],["title/components/AppWebComponent.html",[0,0.743,147,0.996]],["body/components/AppWebComponent.html",[0,1.08,1,0.914,2,1.931,3,0.583,4,0.791,5,2.3,7,1.995,8,1.417,9,0.583,10,0.81,11,0.523,12,0.523,14,1.664,15,1.958,16,2.3,17,2.421,18,1.082,19,1.448,24,0.583,25,1.264,26,1.448,28,1.165,35,2.757,36,2.244,37,2.244,38,2.244,39,1.458,41,1.352,44,2.421,45,2.421,46,2.044,48,1.22,49,0.057,50,1.931,51,1.147,52,0.914,54,2.693,77,1.419,81,2.421,83,1.417,84,0.682,85,0.583,89,1.803,90,1.22,91,1.055,92,1.094,93,0.682,95,1.931,96,1.64,97,1.931,99,0.791,100,1.253,102,1.458,103,1.458,104,1.264,105,1.458,107,1.055,140,1.995,141,2.757,142,1.958,143,1.995,144,3.408,145,1.995,146,1.995,147,1.562,148,2.244,149,1.995,150,1.995,151,0.026,152,0.036,153,0.026,181,2.075,192,2.786,193,1.417,194,2.757,195,3.16,196,3.16,197,3.452,198,2.498,199,3.452,200,2.757,201,2.421,202,2.498,203,2.498,204,2.498,205,2.498,206,2.498,207,2.498,208,1.958,209,3.408,210,1.995,211,1.995,212,1.417,213,1.417,214,1.958,215,1.458,216,2.757,217,2.757,218,1.995,219,1.417,220,1.664,221,1.995,222,1.995,223,2.3,224,1.995,225,1.664,226,1.995,227,1.664,228,1.995,229,1.995,230,1.664,231,1.995,232,1.995,233,1.995,234,1.995,235,1.417]],["title/injectables/DataSourceService.html",[236,1.328,237,1.543]],["body/injectables/DataSourceService.html",[3,0.334,4,1.371,8,1.835,9,0.334,10,0.787,11,0.508,12,0.508,18,0.756,19,0.523,24,0.334,25,0.833,26,1.293,28,0.964,29,1.112,30,1.112,31,1.291,32,2.506,33,1.89,39,0.962,41,1.025,46,1.997,48,2,49,0.058,50,2,51,1.093,52,1.5,59,2.365,60,1.517,67,0.698,68,0.811,77,1.338,84,0.39,85,0.334,86,0.811,88,0.811,92,0.453,94,1.039,96,1.039,99,0.453,100,1.119,101,1.198,102,1.198,103,1.198,104,0.833,105,0.962,107,1.9,108,0.952,116,0.952,118,0.811,131,0.952,151,0.015,152,0.024,153,0.05,170,2.266,186,1.142,208,0.811,212,0.811,213,0.811,215,0.604,219,0.811,227,1.517,236,1.112,237,1.291,238,0.952,239,2.706,240,2.329,241,0.811,242,3.763,243,1.818,244,3.592,245,3.372,246,2.837,247,2.837,248,2.276,249,3.235,250,2.276,251,2.276,252,3.235,253,2.276,254,3.235,255,2.276,256,3.235,257,2.276,258,2.276,259,3.235,260,1.43,261,3.235,262,2.276,263,2.276,264,2.276,265,2.276,266,2.276,267,2.276,268,2.821,269,4.222,270,1.43,271,1.43,272,2.276,273,3.491,274,1.43,275,2.276,276,3.235,277,3.006,278,3.457,279,3.457,280,4.137,281,4.727,282,2.276,283,1.43,284,2.584,285,3.235,286,3.235,287,1.43,288,2.584,289,2.276,290,1.43,291,2.584,292,1.43,293,2.276,294,1.43,295,0.811,296,1.43,297,1.818,298,2.276,299,1.43,300,1.818,301,1.818,302,2.276,303,1.43,304,1.818,305,1.517,306,1.43,307,1.43,308,2.276,309,2.63,310,1.43,311,2.276,312,1.818,313,2.837,314,2.276,315,1.43,316,1.142,317,1.43,318,1.142,319,2.276,320,1.43,321,2.266,322,1.43,323,1.142,324,0.952,325,1.43,326,1.818,327,1.142,328,2.276,329,1.818,330,0.952,331,1.43,332,1.142,333,1.142,334,1.142,335,1.142,336,1.818,337,0.952,338,1.142,339,1.43,340,1.43,341,1.142,342,1.43,343,1.43,344,1.43,345,1.43,346,1.43,347,1.43,348,1.43,349,1.43,350,1.43,351,1.142,352,1.43,353,1.43,354,3.532,355,4.222,356,4.222,357,1.43,358,4.222,359,1.43,360,1.43,361,1.43,362,1.43,363,1.43,364,1.43,365,1.43,366,1.43,367,2.276,368,1.142,369,2.276,370,1.43,371,1.43,372,1.142,373,2.276,374,1.43,375,1.43,376,1.43,377,1.43]],["title/injectables/FilteredSceneService.html",[43,1.328,236,1.328]],["body/injectables/FilteredSceneService.html",[3,0.393,4,1.12,9,0.393,10,0.798,11,0.515,12,0.515,18,0.604,19,0.616,24,0.393,25,0.947,26,1.877,28,1.145,29,2.467,30,1.538,31,1.467,32,2.788,39,1.093,40,1.344,41,1.12,43,1.263,46,2.024,48,1.967,49,0.058,50,1.967,51,0.941,52,1.475,53,1.723,59,1.863,67,2.114,68,2.457,69,1.723,77,1.483,79,2.744,84,0.459,85,0.393,88,0.955,89,1.494,90,0.822,91,0.711,92,0.533,94,0.616,95,1.538,96,1.294,97,1.538,99,0.533,100,1.12,101,1.949,102,1.093,103,1.093,104,0.947,105,1.093,107,1.876,120,1.121,121,1.467,151,0.018,152,0.027,153,0.018,162,1.121,179,1.344,215,1.093,236,1.263,237,2.006,238,1.121,240,0.822,273,1.723,277,2.066,280,2.516,295,1.467,300,1.344,305,1.121,309,1.121,316,2.066,323,3.864,324,2.684,330,1.121,332,1.344,333,1.344,334,1.344,338,1.344,341,2.066,351,3.218,368,2.516,378,3.864,379,1.344,380,3.15,381,3.15,382,4.915,383,2.586,384,2.586,385,2.586,386,2.586,387,2.586,388,1.683,389,2.586,390,1.683,391,2.586,392,3.548,393,1.683,394,2.586,395,1.683,396,2.586,397,1.683,398,2.586,399,1.683,400,1.683,401,2.586,402,3.536,403,2.586,404,3.15,405,1.683,406,2.586,407,2.586,408,2.586,409,2.586,410,2.586,411,2.099,412,2.586,413,1.683,414,2.586,415,3.536,416,3.536,417,1.683,418,2.586,419,2.586,420,1.683,421,2.586,422,1.683,423,2.586,424,2.586,425,2.586,426,2.586,427,2.586,428,2.586,429,1.683,430,2.586,431,1.683,432,1.683,433,1.683,434,0.955,435,1.683,436,1.121,437,1.121,438,1.121,439,1.683,440,1.121,441,1.683,442,1.121,443,1.683,444,1.683,445,1.683,446,1.683,447,2.586,448,2.586,449,2.586,450,1.683,451,1.683,452,1.683,453,1.683,454,1.683,455,1.683,456,1.683,457,1.683,458,1.683,459,1.683,460,1.683,461,1.344,462,3.15,463,1.683,464,1.344,465,1.683,466,1.683,467,1.683,468,1.683,469,2.586,470,1.683,471,1.683,472,1.683,473,2.586,474,1.683,475,1.683,476,1.683,477,1.683,478,1.683,479,2.586,480,1.683,481,1.683,482,1.683,483,1.683,484,1.683]],["title/interfaces/GlobalConfig.html",[93,0.743,94,0.996]],["body/interfaces/GlobalConfig.html",[0,0.979,1,0.967,3,0.617,4,0.837,9,0.617,10,0.435,11,0.281,12,0.281,13,1.759,15,1.498,18,0.838,19,0.967,20,2.109,21,2.109,22,2.109,23,2.109,24,0.617,25,1.313,26,1.795,27,2.864,28,1.247,29,1.751,30,1.289,32,2.478,33,1.759,34,1.498,36,1.498,37,1.498,38,1.498,39,1.116,41,1.136,42,2.109,43,1.751,44,1.498,45,2.034,49,0.058,51,0.951,52,1.724,53,1.759,54,2.478,60,2.389,61,2.864,63,2.109,64,2.109,65,2.109,69,1.759,71,2.109,73,2.109,74,2.109,75,2.109,77,1.447,78,2.109,79,1.498,80,2.109,81,2.478,82,2.109,83,1.498,84,0.721,85,0.617,86,1.498,87,2.109,88,1.498,89,1.845,90,1.289,91,1.116,92,1.136,93,0.721,94,1.313,95,2.133,96,1.724,97,2.133,98,2.109,99,0.837,100,1.384,101,1.845,102,1.116,103,1.116,104,0.967,105,1.116,106,2.109,107,1.116,108,2.389,109,2.109,110,2.109,111,2.109,112,2.109,113,2.864,114,2.109,115,2.109,116,1.759,117,2.109,118,2.591,119,2.109,120,1.759,121,1.498,122,2.109,123,3.648,124,2.109,125,3.648,126,2.109,127,3.648,128,2.109,129,2.864,130,3.253,131,3.138,132,2.864,133,2.478,134,2.109,135,2.109,136,2.109,151,0.028,152,0.038,153,0.028,485,1.289]],["title/interfaces/InputDataFormat.html",[93,0.743,201,1.543]],["body/interfaces/InputDataFormat.html",[0,1.077,2,1.488,3,0.712,4,0.965,5,2.03,9,0.712,10,0.503,11,0.324,12,0.324,15,1.729,16,2.03,17,1.729,18,1.021,19,1.116,24,0.712,25,1.444,26,1.601,28,1.077,36,1.729,37,1.729,38,1.729,39,1.287,41,1.249,44,2.237,45,2.237,49,0.057,51,1.021,54,2.623,77,1.517,81,2.623,83,1.729,84,0.832,85,0.712,89,2.072,90,1.488,91,1.287,92,1.249,93,0.832,95,1.488,96,1.753,97,1.488,99,0.965,100,1.385,102,1.666,103,1.666,104,1.444,105,1.666,107,1.287,147,1.116,148,1.729,151,0.032,152,0.041,153,0.032,181,1.287,192,1.729,193,1.729,194,2.434,195,3.15,196,2.434,200,2.434,201,2.623,208,1.729,209,3.693,210,2.434,211,2.434,212,1.729,213,1.729,214,2.716,215,1.666,216,3.15,217,3.15,218,3.693,219,1.729,220,2.03,221,2.434,222,2.434,223,2.627,224,2.434,225,2.03,226,2.434,227,2.03,228,2.434,229,2.434,230,2.03,231,2.434,232,2.434,233,2.434,234,2.434,235,1.729,485,1.488]],["title/modules/StoreModule.html",[154,1.812,161,1.328]],["body/modules/StoreModule.html",[3,0.817,4,1.108,9,0.817,10,0.577,11,0.372,12,0.372,18,0.817,28,0.955,41,1.363,49,0.058,77,1.61,84,0.955,85,1.005,92,1.363,99,1.108,101,1.478,151,0.037,152,0.045,153,0.037,154,2.331,156,1.708,161,2.101,167,2.794,173,3.437,180,2.331,212,1.985,213,1.985,372,3.437,486,2.331,487,3.498,488,2.794,489,2.794,490,3.498,491,2.794,492,3.722,493,3.498,494,2.794,495,2.794,496,2.794,497,2.331,498,3.498,499,3.498,500,3.498,501,2.794,502,3.498,503,3.498,504,3.498,505,3.498,506,3.498,507,3.498,508,3.498,509,3.498,510,3.498,511,3.498,512,3.498,513,3.498,514,3.498,515,3.498]],["title/changelog.html",[516,1.531,517,1.304,518,1.531]],["body/changelog.html",[0,0.695,2,0.805,3,0.775,6,0.772,8,0.548,11,0.388,12,0.415,14,1.696,17,0.935,18,1.114,19,0.354,25,0.354,28,1.253,29,2.033,30,1.707,46,0.408,49,0.041,51,0.226,52,0.354,67,0.472,85,0.226,86,0.548,91,1.402,93,0.906,94,0.354,100,1.156,104,1.215,121,0.935,133,1.444,139,0.772,142,0.548,151,0.01,152,0.017,153,0.037,157,1.243,178,0.935,181,1.313,185,0.772,214,0.548,215,0.696,230,2.071,243,0.772,268,0.772,273,1.696,278,1.721,279,0.772,284,2.033,291,2.793,295,2.66,297,3.262,301,2.281,304,3.326,305,1.435,309,1.903,312,1.316,329,2.033,337,1.098,392,2.033,434,1.62,461,1.316,464,0.772,485,0.472,501,0.772,517,1.222,518,1.098,519,1.316,520,0.772,521,0.772,522,2.793,523,1.648,524,2.545,525,2.856,526,0.966,527,5.255,528,1.648,529,1.648,530,3.109,531,1.648,532,0.966,533,2.545,534,0.966,535,3.109,536,0.966,537,3.894,538,1.648,539,2.651,540,1.648,541,3.963,542,2.651,543,0.966,544,2.856,545,3.319,546,2.651,547,3.811,548,0.966,549,0.966,550,1.648,551,2.545,552,2.033,553,0.966,554,0.966,555,0.966,556,1.648,557,3.894,558,2.154,559,0.966,560,1.648,561,2.154,562,0.966,563,0.966,564,0.966,565,2.154,566,0.966,567,1.648,568,0.966,569,0.966,570,0.966,571,0.772,572,4.164,573,0.966,574,0.966,575,0.772,576,0.772,577,0.772,578,0.966,579,1.648,580,0.772,581,0.966,582,1.648,583,2.545,584,2.545,585,0.966,586,1.648,587,2.154,588,0.966,589,0.966,590,1.648,591,0.966,592,0.966,593,3.109,594,2.071,595,2.281,596,1.721,597,0.966,598,3.779,599,2.281,600,0.966,601,1.648,602,0.966,603,2.154,604,2.793,605,4.084,606,1.648,607,0.966,608,0.966,609,1.648,610,3.894,611,1.721,612,0.966,613,3.109,614,2.856,615,0.966,616,0.966,617,2.856,618,0.966,619,0.966,620,0.966,621,0.966,622,2.154,623,0.966,624,1.316,625,1.316,626,0.966,627,2.793,628,0.966,629,0.966,630,0.966,631,4.236,632,0.966,633,0.966,634,2.281,635,2.431,636,2.281,637,1.648,638,0.966,639,0.966,640,1.648,641,1.648,642,0.966,643,1.648,644,1.648,645,1.648,646,1.648,647,0.966,648,2.154,649,0.966,650,0.966,651,0.772,652,0.966,653,1.721,654,1.648,655,1.648,656,0.966,657,0.966,658,0.966,659,4.414,660,0.966,661,1.648,662,1.648,663,1.648,664,2.545,665,1.648,666,0.966,667,0.966,668,0.966,669,0.966,670,2.154,671,0.966,672,1.648,673,0.966,674,0.966,675,1.648,676,3.109,677,1.316,678,0.966,679,0.772,680,0.966,681,0.966,682,0.966,683,2.154,684,1.648,685,3.109,686,1.316,687,1.648,688,2.545,689,0.966,690,0.966,691,1.316,692,2.545,693,2.856,694,0.966,695,0.966,696,0.772,697,0.966,698,1.648,699,1.648,700,0.966,701,1.648,702,0.966,703,1.648,704,0.966,705,1.648,706,0.966,707,0.966,708,0.966,709,0.966,710,0.966,711,0.966,712,0.966,713,1.648,714,0.966,715,0.966,716,0.966,717,0.966,718,0.966,719,0.966,720,1.648,721,0.966,722,0.966,723,0.966,724,0.966,725,0.966,726,1.648,727,0.966,728,3.109,729,0.966,730,0.966,731,2.154,732,2.154,733,1.648,734,0.966,735,0.966,736,0.772,737,0.772,738,0.966,739,1.648,740,1.648,741,0.966,742,0.966,743,0.966,744,0.966,745,1.648,746,1.648,747,0.966,748,1.648,749,1.648,750,0.966,751,1.648,752,2.545,753,2.154,754,0.966,755,0.966,756,0.966,757,0.966,758,0.772,759,0.966,760,1.648,761,0.966,762,0.966,763,1.648,764,2.545,765,0.966,766,0.966,767,0.966,768,0.966,769,3.109,770,2.154,771,1.648,772,0.966,773,0.966,774,2.154,775,1.648,776,1.648,777,1.648,778,2.545,779,0.966,780,0.772,781,1.444,782,0.966,783,0.966,784,1.648,785,0.966,786,0.966,787,0.966,788,0.966,789,0.966,790,2.545,791,0.966,792,2.154,793,2.545,794,0.966,795,2.154,796,2.856,797,1.648,798,1.648,799,1.648,800,1.648,801,1.648,802,2.154,803,2.545,804,2.856,805,1.648,806,2.154,807,0.966,808,0.966,809,3.319,810,2.154,811,0.966,812,2.545,813,2.545,814,3.648,815,0.966,816,0.966,817,0.966,818,0.966,819,0.966,820,0.966,821,1.648,822,0.966,823,1.648,824,0.966,825,0.966,826,0.966,827,0.966,828,1.648,829,0.966,830,2.154,831,0.966,832,0.966,833,1.648,834,1.721,835,1.648,836,2.154,837,0.966,838,0.966,839,0.966,840,1.648,841,0.966,842,0.966,843,0.966,844,0.966,845,0.966,846,0.966,847,0.966,848,1.648,849,0.966,850,0.966,851,2.545,852,3.109,853,1.648,854,2.154,855,1.648,856,0.966,857,0.966,858,0.966,859,0.966,860,2.154,861,0.966,862,0.966,863,0.966,864,1.648,865,1.648,866,1.648,867,2.154,868,0.966,869,0.966,870,0.966,871,0.966,872,0.966,873,0.772,874,0.966,875,0.966,876,0.966,877,1.648,878,0.966,879,0.966,880,1.648,881,0.966,882,0.966,883,0.966,884,0.966,885,0.966,886,0.966,887,0.966,888,0.966,889,0.966,890,0.966,891,3.497,892,0.966,893,1.721,894,3.497,895,2.154,896,2.545,897,1.648,898,2.154,899,0.966,900,1.648,901,0.966,902,0.966,903,0.966,904,1.648,905,1.648,906,1.648,907,0.966,908,0.966,909,0.966,910,0.966,911,1.648,912,0.966,913,1.721,914,0.966,915,0.966,916,0.966,917,0.966,918,0.772,919,0.966,920,0.966,921,0.966,922,0.966,923,0.966,924,0.966,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,930,0.966,931,2.033,932,2.856,933,0.966,934,0.966,935,0.966,936,0.966,937,0.966,938,0.966,939,0.966,940,0.966,941,0.966,942,0.966,943,0.966,944,0.966,945,0.966,946,0.966,947,0.966,948,0.966,949,1.648,950,0.966,951,1.648,952,0.966,953,1.648,954,1.648,955,2.545,956,2.545,957,1.648,958,1.648,959,0.966,960,0.966,961,0.966,962,2.154,963,0.966,964,0.772,965,0.966,966,0.966,967,0.966,968,0.966,969,0.966,970,0.966,971,1.648,972,3.779,973,2.154,974,1.648,975,0.966,976,1.648,977,0.966,978,0.966,979,0.966,980,0.966,981,0.966,982,0.966,983,0.966,984,0.966,985,0.966,986,1.648,987,2.651,988,1.648,989,0.966,990,0.966,991,0.966,992,0.966,993,0.966,994,0.966,995,1.648,996,0.966,997,0.966,998,0.966,999,1.696,1000,0.966,1001,1.648,1002,0.966,1003,0.966,1004,0.966,1005,1.648,1006,1.648,1007,0.966,1008,0.966,1009,0.966,1010,0.966,1011,1.648,1012,2.154,1013,1.648,1014,0.966,1015,1.316,1016,0.966,1017,0.966,1018,0.966,1019,0.966,1020,0.966,1021,0.966,1022,0.966,1023,0.966,1024,0.966,1025,0.772,1026,0.966,1027,0.966,1028,1.648,1029,0.966,1030,0.966,1031,0.966,1032,0.966,1033,0.966,1034,0.966,1035,1.648,1036,1.648,1037,0.966,1038,0.772,1039,0.966,1040,0.966,1041,0.772,1042,0.966,1043,0.966,1044,1.648,1045,0.966,1046,0.966,1047,0.966,1048,0.966,1049,0.966,1050,0.966,1051,0.966,1052,0.966,1053,0.966,1054,0.966,1055,0.966,1056,1.648,1057,0.966,1058,0.966,1059,0.966,1060,0.966,1061,1.648,1062,0.966,1063,0.966,1064,0.772,1065,0.966,1066,0.966,1067,0.966,1068,0.966,1069,0.966,1070,0.966,1071,0.966,1072,0.966]],["title/coverage.html",[999,2.438]],["body/coverage.html",[0,1.08,1,1.121,9,0.715,10,0.879,11,0.567,12,0.567,13,2.635,43,1.495,49,0.056,51,0.715,79,1.737,93,1.08,94,1.121,100,0.97,118,3.004,138,2.446,147,1.121,151,0.032,152,0.042,153,0.032,181,1.851,192,2.486,193,2.486,201,1.737,219,2.786,235,1.737,236,1.931,237,1.737,239,2.244,240,1.931,241,2.244,378,2.446,379,2.446,411,2.04,436,2.04,437,2.04,438,2.04,440,2.04,442,2.04,486,2.04,497,2.04,594,2.04,999,2.04,1073,3.062,1074,3.062,1075,3.062,1076,3.062,1077,5.16,1078,3.062,1079,3.062,1080,3.7,1081,4.795,1082,2.635,1083,2.446,1084,3.062,1085,3.062,1086,2.446,1087,3.062,1088,3.062,1089,3.16,1090,3.16,1091,2.446,1092,3.062,1093,3.062]],["title/dependencies.html",[157,1.59,580,1.836]],["body/dependencies.html",[9,0.651,11,0.297,49,0.058,84,0.761,142,2.11,151,0.029,152,0.039,153,0.029,157,1.362,175,2.228,177,2.972,178,2.11,244,2.228,288,2.228,318,2.228,327,2.228,330,1.858,434,1.582,488,2.228,489,2.228,491,2.228,492,2.972,494,2.228,599,2.228,624,2.228,677,2.228,686,2.228,736,2.228,737,2.228,834,2.228,893,2.972,1094,2.789,1095,2.789,1096,2.789,1097,5.119,1098,2.789,1099,2.789,1100,2.789,1101,2.789,1102,2.789,1103,2.789,1104,2.789,1105,2.789,1106,2.789,1107,2.789,1108,2.789,1109,2.789,1110,2.789,1111,4.652,1112,2.789,1113,3.72,1114,2.789,1115,2.789,1116,2.789,1117,4.186,1118,2.789,1119,2.789,1120,2.789,1121,2.789,1122,2.789,1123,2.789,1124,4.186,1125,2.789,1126,2.789,1127,2.789,1128,3.72,1129,2.789,1130,2.789,1131,2.789,1132,2.789,1133,2.789,1134,3.72,1135,2.789,1136,2.789,1137,2.789,1138,2.789,1139,2.789,1140,2.789,1141,2.789,1142,2.789,1143,2.789,1144,2.789,1145,2.789,1146,2.789,1147,2.789,1148,2.789,1149,2.789,1150,3.72,1151,2.228,1152,2.789,1153,2.789,1154,2.789,1155,2.789,1156,2.789,1157,3.72,1158,2.789,1159,2.789,1160,2.789,1161,2.789,1162,2.789,1163,2.789,1164,2.789,1165,2.789,1166,2.789,1167,2.789,1168,2.789,1169,2.789,1170,2.789,1171,2.789,1172,2.789,1173,2.789,1174,2.789,1175,2.789,1176,2.789,1177,2.789,1178,2.789,1179,2.789,1180,2.789,1181,3.72,1182,2.789,1183,2.789,1184,2.789,1185,2.789,1186,2.789,1187,2.789,1188,2.789,1189,2.789,1190,2.789,1191,2.789,1192,2.789,1193,2.789,1194,2.789,1195,3.72,1196,2.789,1197,2.789,1198,2.789,1199,2.789,1200,2.789,1201,2.789,1202,2.789,1203,2.789,1204,2.789,1205,2.789,1206,2.789,1207,2.789,1208,2.789]],["title/miscellaneous/functions.html",[1209,0.971,1210,2.602]],["body/miscellaneous/functions.html",[10,0.795,11,0.513,12,0.513,24,0.797,28,0.931,48,2.466,49,0.056,50,2.466,52,1.849,59,2.466,89,1.441,151,0.036,152,0.044,153,0.036,181,1.79,192,1.936,193,2.403,208,1.936,214,2.865,220,2.273,235,2.403,239,1.936,240,1.666,241,2.403,324,2.823,335,2.726,336,3.384,337,2.273,440,2.823,442,2.823,781,2.733,1082,2.273,1083,3.384,1086,3.384,1089,2.726,1090,3.68,1091,3.384,1209,1.441,1210,2.726,1211,2.726,1212,3.384,1213,4.236,1214,3.412,1215,3.412,1216,4.236,1217,3.412,1218,4.236,1219,3.412,1220,3.412]],["title/index.html",[24,0.537,516,1.531,517,1.304]],["body/index.html",[0,0.859,3,1.13,12,0.335,18,1.265,49,0.042,93,1.099,151,0.033,152,0.042,153,0.033,215,1.329,295,2.518,434,1.785,485,1.536,518,2.096,519,3.215,520,3.215,521,3.215,522,3.546,539,2.513,541,3.215,546,3.737,547,3.546,552,2.513,575,2.513,576,2.513,577,2.513,595,3.863,596,3.737,604,3.215,611,2.513,625,3.215,627,2.513,635,3.117,636,2.513,653,2.513,691,3.215,758,2.513,780,3.215,918,2.513,931,3.215,1015,2.513,1025,2.513,1038,2.513,1221,4.025,1222,3.146,1223,3.146,1224,3.146,1225,3.146,1226,3.215,1227,3.146,1228,3.146,1229,3.146,1230,4.025,1231,4.025,1232,4.025,1233,4.439,1234,3.146,1235,3.146,1236,4.679,1237,4.439,1238,3.146,1239,3.146,1240,4.025,1241,3.146,1242,3.146,1243,3.146,1244,4.025,1245,3.146,1246,3.146,1247,3.146,1248,3.146,1249,4.679,1250,3.146,1251,3.146,1252,3.146,1253,3.146,1254,3.146,1255,3.146,1256,3.146,1257,3.146,1258,3.146,1259,3.146,1260,3.146,1261,3.146,1262,3.146,1263,3.146,1264,3.146,1265,3.146,1266,3.146]],["title/license.html",[516,1.531,517,1.304,1267,1.836]],["body/license.html",[49,0.045,151,0.037,152,0.045,153,0.037,163,2.348,594,2.348,634,3.452,635,2.348,651,3.734,679,2.815,696,3.452,873,3.452,964,2.815,987,2.815,1041,2.815,1064,2.815,1151,2.815,1226,4.19,1267,2.815,1268,3.524,1269,4.674,1270,3.524,1271,3.524,1272,4.321,1273,3.524,1274,3.524,1275,3.524,1276,3.524,1277,3.524,1278,3.524,1279,4.321,1280,3.524,1281,3.524,1282,3.524,1283,3.524,1284,3.524,1285,3.524,1286,3.524,1287,3.524,1288,3.524,1289,3.524,1290,3.524,1291,3.524,1292,4.321,1293,3.524,1294,3.524,1295,3.524,1296,3.524,1297,3.524,1298,3.524,1299,4.321,1300,3.524,1301,3.524,1302,3.524,1303,3.524,1304,3.524,1305,3.524,1306,3.524,1307,3.524,1308,3.524,1309,3.524,1310,3.524,1311,3.524,1312,3.524,1313,3.524,1314,3.524,1315,3.524,1316,3.524,1317,3.524,1318,3.524,1319,3.524,1320,3.524,1321,3.524,1322,3.524,1323,3.524,1324,3.524,1325,3.524,1326,3.524]],["title/modules.html",[156,1.786]],["body/modules.html",[49,0.05,151,0.044,152,0.05,153,0.044,155,2.354,156,2.026,161,2.026,178,2.354,542,3.315,913,3.315,1327,4.15,1328,4.762,1329,4.15]],["title/overview.html",[1330,2.923]],["body/overview.html",[1,1.79,2,1.912,34,2.221,49,0.054,133,2.863,147,1.79,151,0.041,152,0.048,153,0.041,155,3.008,156,1.912,157,2.248,158,3.127,159,3.127,160,3.127,161,2.388,162,3.067,163,2.608,238,2.608,485,1.912,1330,3.127]],["title/miscellaneous/typealiases.html",[1209,0.971,1331,3.257]],["body/miscellaneous/typealiases.html",[10,0.768,11,0.496,12,0.496,24,0.933,49,0.052,51,0.933,151,0.042,152,0.049,153,0.042,239,2.267,240,1.951,241,2.643,245,3.721,321,3.192,326,3.192,571,4.058,781,2.643,1082,2.662,1209,1.688,1211,3.192,1212,3.192,1332,3.996]],["title/miscellaneous/variables.html",[1209,0.971,1333,2.602]],["body/miscellaneous/variables.html",[10,0.731,11,0.472,12,0.472,24,0.857,41,1.163,49,0.057,51,1.181,67,2.47,68,2.869,85,0.857,96,1.742,151,0.039,152,0.047,153,0.039,180,2.446,223,2.446,225,2.446,411,2.952,436,2.952,437,2.952,438,2.952,486,2.446,495,2.932,496,2.932,497,2.952,781,2.082,1080,2.932,1209,1.551,1333,2.932,1334,4.941,1335,3.67,1336,3.67,1337,3.67,1338,3.67,1339,3.67,1340,3.67,1341,3.67]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["0.5.0",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1015,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0/1",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["1.0",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":893,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["1.3.5",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":834,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":230,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["10.0.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["1000",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["10x",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":539,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["12/17",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["15.126.1",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["173",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":686,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["2.2.0",{"_index":677,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":624,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["2019",{"_index":987,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["229.5",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["3.0",{"_index":1231,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":599,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1253,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["4.17.1",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["47",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":427,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ability",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1041,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["access",{"_index":449,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["accurate",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1320,"title":{},"body":{"license.html":{}}}],["actions",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["added",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["aggregate",{"_index":275,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["aggregateresult",{"_index":320,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["ala",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1332,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1235,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":737,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1290,"title":{},"body":{"license.html":{}}}],["angular",{"_index":434,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":318,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":546,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":1245,"title":{},"body":{"index.html":{}}}],["app",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilteredSceneService.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["appelement",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":279,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["appmodule",{"_index":155,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":147,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1324,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":679,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["attempts",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1313,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":913,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["award",{"_index":1265,"title":{},"body":{"index.html":{}}}],["backend",{"_index":243,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["background",{"_index":1038,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["basewebcomponent",{"_index":195,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["basic",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":501,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["beta",{"_index":604,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":305,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["block?.placement.target",{"_index":450,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["blocks",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.bounds",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.rotation",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.rotationx",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.scene?.find((node",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.target",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyuicomponent",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyuimodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["boolean",{"_index":208,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1328,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1227,"title":{},"body":{"index.html":{}}}],["builds",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1270,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["cacheable",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["cancelregistration",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["ccf",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":321,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["ccfdatabaseoptions",{"_index":269,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["cdr",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["cell",{"_index":284,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["center",{"_index":1260,"title":{},"body":{"index.html":{}}}],["change",{"_index":758,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["changedetection",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy.onpush",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy.onpush,selector",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["changedetectorref",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changelog",{"_index":518,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1276,"title":{},"body":{"license.html":{}}}],["choose",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["choosescene",{"_index":383,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["choosescene(data",{"_index":389,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ci/cd",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1316,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["cleanup",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":1249,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":781,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["colorizing",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":432,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.data",{"_index":423,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.organs",{"_index":401,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.scene",{"_index":406,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["come",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":327,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["common",{"_index":519,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compareconfig",{"_index":1086,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["compareconfig(previous",{"_index":335,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["compatibility",{"_index":509,"title":{},"body":{"modules/StoreModule.html":{}}}],["complexity",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":193,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component.component.ts:32",{"_index":202,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":203,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:34",{"_index":204,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":206,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":207,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:38",{"_index":205,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":199,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"overview.html":{}}}],["comunica/query",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1298,"title":{},"body":{"license.html":{}}}],["config",{"_index":268,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["configstate",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["configstore",{"_index":200,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["configuration",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["connectdatasource",{"_index":248,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connectdatasource(source",{"_index":267,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":1325,"title":{},"body":{"license.html":{}}}],["consider",{"_index":507,"title":{},"body":{"modules/StoreModule.html":{}}}],["console",{"_index":373,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["console.info(`loaded",{"_index":374,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["console.log(source",{"_index":377,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["consortium",{"_index":1271,"title":{},"body":{"license.html":{}}}],["const",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"modules/StoreModule.html":{}}}],["constants",{"_index":439,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["constructor(configstate",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{}}}],["constructor(configstore",{"_index":198,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(locator",{"_index":260,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["constructor(private",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["container",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1225,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1321,"title":{},"body":{"license.html":{}}}],["control",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["convention",{"_index":217,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["coordinate",{"_index":520,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":1292,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1279,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1269,"title":{},"body":{"license.html":{}}}],["core/services/filtered",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["core/store/store.module",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["cors",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["counts",{"_index":286,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["coverage",{"_index":999,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createcustomelement",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["createdatasource",{"_index":249,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["creates",{"_index":263,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["credits",{"_index":1255,"title":{},"body":{"index.html":{}}}],["css",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["cuboid",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":336,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["currently",{"_index":278,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["customelements.define('ccf",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["cyberinfrastructure",{"_index":1257,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["d.rui_location",{"_index":226,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["damages",{"_index":1317,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.map(d",{"_index":221,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["data?.map(obj",{"_index":445,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["database",{"_index":309,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["database/src/lib/ccf",{"_index":315,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["datasets",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":245,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasources",{"_index":342,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["datasourceservice",{"_index":237,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["date()).gettime",{"_index":375,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["date().gettime",{"_index":370,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getaggregateresults(filter",{"_index":359,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getcelltypetermoccurences(filter",{"_index":361,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getcelltypetreemodel",{"_index":363,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":360,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytreemodel",{"_index":362,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getreferenceorgans",{"_index":364,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getreferenceorganscene(organ",{"_index":366,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getscene(filter",{"_index":365,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.gettissueblockresults(filter",{"_index":357,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dboptions",{"_index":246,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":1281,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1326,"title":{},"body":{"license.html":{}}}],["december",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["deck.gl/core",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["decorator",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["decorators",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["deeply",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_ccf_db_options",{"_index":314,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["demo",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":157,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":242,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["details",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1256,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":506,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":1025,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["directives",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["directly",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["disabled",{"_index":515,"title":{},"body":{"modules/StoreModule.html":{}}}],["display",{"_index":301,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["displayed",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["distinctuntilchanged",{"_index":331,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["distinctuntilchanged(compareconfig",{"_index":346,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["distribute",{"_index":1288,"title":{},"body":{"license.html":{}}}],["dobootstrap",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":594,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["done",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["emitting",{"_index":281,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["entire",{"_index":496,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":1216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.owl#has_spatial_entity",{"_index":225,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["entity.owl#sample",{"_index":224,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["entrycomponents",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":212,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":232,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["environment.production",{"_index":372,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":213,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["es",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["eslint/naming",{"_index":216,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["eslint/no",{"_index":316,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["etc",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":547,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1312,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["executionstrategy",{"_index":510,"title":{},"body":{"modules/StoreModule.html":{}}}],["executor",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["expanded",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["exploration",{"_index":1229,"title":{},"body":{"index.html":{}}}],["export",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["express",{"_index":1151,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":194,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["external",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["favor",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":481,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["female_skin_url",{"_index":436,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1280,"title":{},"body":{"license.html":{}}}],["filter",{"_index":273,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["filter(config",{"_index":343,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["filterednodes",{"_index":473,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredorgans",{"_index":380,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredscene",{"_index":381,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredsceneservice",{"_index":43,"title":{"injectables/FilteredSceneService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["filterscenenodes",{"_index":384,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filterscenenodes(nodes",{"_index":391,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["final",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["finishing",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1308,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["fly",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1297,"title":{},"body":{"license.html":{}}}],["form",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":521,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":1275,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":219,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{}}}],["functions",{"_index":1210,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1263,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1295,"title":{},"body":{"license.html":{}}}],["further",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["genericglobalconfig",{"_index":210,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["getaggregateresults",{"_index":250,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":272,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetermoccurences",{"_index":251,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":282,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":252,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getneededreferenceorgans",{"_index":385,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededreferenceorgans(referenceorgans",{"_index":394,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededskins",{"_index":386,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededskins(organs",{"_index":396,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getontologytermoccurences",{"_index":253,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":289,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getontologytreemodel",{"_index":254,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getorganscene",{"_index":255,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getorganscene(organ",{"_index":293,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getreferenceorgans",{"_index":256,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getscene",{"_index":257,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getscene(filter",{"_index":298,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getting",{"_index":516,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":258,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":302,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["github",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":94,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["globalconfig.getoption('data').pipe",{"_index":340,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalconfigstate",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["globalthis['dboptions",{"_index":233,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["good",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":736,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["granted",{"_index":1274,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1329,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["hand",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":500,"title":{},"body":{"modules/StoreModule.html":{}}}],["haszoomingnode",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["height",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["helmet",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1273,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["highlight.operator",{"_index":441,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["highlight_yellow",{"_index":411,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlightid",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["highlightifmatching",{"_index":1083,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["highlightifmatching(entity",{"_index":1215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["highlights",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["hightlight",{"_index":440,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hightlight(id",{"_index":1217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hightlight(this.highlightid",{"_index":410,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["holders",{"_index":1314,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["http://purl.org/ccf/1.5/entity/${d.id",{"_index":222,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["http://purl.org/ccf/1.5/entity/${id",{"_index":416,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["http://purl.org/ccf/latest/ccf",{"_index":223,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhfskin",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmskin",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://beta",{"_index":1232,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":1244,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1237,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":1236,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1239,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1234,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":511,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":635,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["icon",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":214,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataSourceService.html":{}}}],["implied",{"_index":1305,"title":{},"body":{"license.html":{}}}],["import",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["imports",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["improve",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1300,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":634,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1261,"title":{},"body":{"index.html":{}}}],["individual",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"index.html":{}}}],["information",{"_index":780,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["initialconfig",{"_index":231,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["initialdelay",{"_index":229,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["initialization",{"_index":311,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["initialized",{"_index":196,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["injectable",{"_index":236,"title":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"overview.html":{}}}],["injector",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["input",{"_index":209,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["inputdataformat",{"_index":201,"title":{"interfaces/InputDataFormat.html":{}},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{}}}],["inputs",{"_index":197,"title":{},"body":{"components/AppWebComponent.html":{}}}],["instance",{"_index":264,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["instead",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":93,"title":{"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":485,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["issue",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":464,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["item[spatial_entity_url].placement.target",{"_index":465,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["iu",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":577,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["jsonld/jsonld",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["jsonldobj",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["july",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["keyboard",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1304,"title":{},"body":{"license.html":{}}}],["known",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["labs/data",{"_index":489,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["landmarks",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":513,"title":{},"body":{"modules/StoreModule.html":{}}}],["latest",{"_index":552,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layers",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["left/right",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["level",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1318,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1315,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":575,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1267,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1283,"title":{},"body":{"license.html":{}}}],["limited",{"_index":964,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["link",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":611,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["loaded",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["location",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["locationstrategy",{"_index":261,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["locator",{"_index":266,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["lodash",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1254,"title":{},"body":{"index.html":{}}}],["logger",{"_index":512,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["lru",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["made",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":483,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["male_skin_url",{"_index":437,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managers",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":332,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["map(([nodes",{"_index":408,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map(([organs",{"_index":403,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map((config",{"_index":345,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["map(data",{"_index":341,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["map(id",{"_index":415,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map(selectorgan",{"_index":466,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["march",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["mc",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":448,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["memory",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1307,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1286,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"changelog.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["minor",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1209,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1268,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":288,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["modify",{"_index":1285,"title":{},"body":{"license.html":{}}}],["module",{"_index":154,"title":{"modules/AppModule.html":{},"modules/StoreModule.html":{}},"body":{"modules/StoreModule.html":{}}}],["modules",{"_index":156,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepo",{"_index":1222,"title":{},"body":{"index.html":{}}}],["monotypeoperatorfunction",{"_index":1218,"title":{},"body":{"miscellaneous/functions.html":{}}}],["more",{"_index":931,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["moved",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1223,"title":{},"body":{"index.html":{}}}],["n3",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["neededorgans",{"_index":471,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededorgans.has(node.reference_organ",{"_index":476,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededreferenceorgans",{"_index":468,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededskins",{"_index":469,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["needs",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1258,"title":{},"body":{"index.html":{}}}],["new",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["ng5",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["ngdobootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["ngondestroy",{"_index":259,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["ngx",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":488,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":491,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":494,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxsdatapluginmodule",{"_index":487,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":504,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule",{"_index":490,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":514,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":493,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":505,"title":{},"body":{"modules/StoreModule.html":{}}}],["nih",{"_index":1264,"title":{},"body":{"index.html":{}}}],["node",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["node.reference_organ",{"_index":475,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["node.zoomtoonload",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["nodes",{"_index":300,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["nodes.filter(node",{"_index":474,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["noninfringement",{"_index":1311,"title":{},"body":{"license.html":{}}}],["note",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":873,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":571,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["obj[spatial_entity_url",{"_index":446,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["object.keys(config).length",{"_index":344,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["observable",{"_index":280,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["obtaining",{"_index":1278,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1238,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["ondestroy",{"_index":319,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["one",{"_index":918,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["online",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["onmouseenter",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["onmouseleave",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["ontological",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":291,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["ontologyterms",{"_index":459,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ontologytreemodel",{"_index":322,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["opacities",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":625,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1250,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1252,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1251,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":312,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["organ",{"_index":295,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"index.html":{}}}],["organ.reference_organ",{"_index":460,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organ.sex",{"_index":462,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["organs.find(temporgan",{"_index":455,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.foreach(organ",{"_index":480,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.has(organ.reference_organ",{"_index":478,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.length",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["organs/anatomical",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["organs[0",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["organurls",{"_index":444,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organurls[0",{"_index":457,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["orthographic",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":1266,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1323,"title":{},"body":{"license.html":{}}}],["out",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["outputs",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["over",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1330,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":580,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":354,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["parse",{"_index":234,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["parser",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1309,"title":{},"body":{"license.html":{}}}],["partly",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["performance",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1272,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1293,"title":{},"body":{"license.html":{}}}],["person",{"_index":1277,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1294,"title":{},"body":{"license.html":{}}}],["placed",{"_index":502,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":492,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["popup",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":636,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1302,"title":{},"body":{"license.html":{}}}],["position",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["preferences",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":337,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["previously",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["process",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":595,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1224,"title":{},"body":{"index.html":{}}}],["projects/.../app",{"_index":1214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../constants.ts",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data",{"_index":1211,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../highlight.operator.ts",{"_index":1212,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../zoom",{"_index":1213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ccf",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["promise((resolve",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["properties",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["provided",{"_index":1064,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providedin",{"_index":338,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["providers",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["public",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1287,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1310,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":576,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":244,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["query",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["real",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":499,"title":{},"body":{"modules/StoreModule.html":{}}}],["rectify",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":297,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["referenceorgans",{"_index":382,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["referenceorgans.filter(organ",{"_index":477,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["refernced",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":653,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":326,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["removed",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":1221,"title":{},"body":{"index.html":{}}}],["required",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/GlobalConfig.html":{},"overview.html":{}}}],["resets",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":349,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["respond",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1282,"title":{},"body":{"license.html":{}}}],["result",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["returns",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1284,"title":{},"body":{"license.html":{}}}],["root",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["root_states",{"_index":497,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":435,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["rui",{"_index":541,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_location",{"_index":218,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["rui_locations.jsonld",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":330,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["s",{"_index":376,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["sample",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["scene.service",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["scene.service.ts",{"_index":379,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["scene.service.ts:18",{"_index":400,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:19",{"_index":431,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:22",{"_index":417,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:26",{"_index":422,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:28",{"_index":429,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:32",{"_index":420,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:37",{"_index":405,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:42",{"_index":413,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:47",{"_index":388,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:54",{"_index":390,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:73",{"_index":399,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:82",{"_index":393,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:91",{"_index":395,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:95",{"_index":397,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene/filtered",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["scenesource",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["scheduled",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1259,"title":{},"body":{"index.html":{}}}],["search",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":691,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["selectorgan",{"_index":463,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selectorgans",{"_index":387,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selectorgans(data",{"_index":398,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selects",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1291,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":265,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["set",{"_index":392,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["set([...organs",{"_index":472,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["set(organs",{"_index":467,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["set(organurls",{"_index":452,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["settimeout(resolve",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["setting",{"_index":508,"title":{},"body":{"modules/StoreModule.html":{}}}],["setup",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["setzoomtoifmatching",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setzoomtoifmatching(entity",{"_index":1219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sex",{"_index":461,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["sexes",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["shadow",{"_index":317,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["shall",{"_index":1299,"title":{},"body":{"license.html":{}}}],["shared",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/web",{"_index":211,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["sharereplay",{"_index":333,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["sharereplay(1",{"_index":351,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["shortest",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["sides",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["simplifies",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["sites",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["skins",{"_index":479,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["skins.add(female_skin_url",{"_index":482,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["skins.add(male_skin_url",{"_index":484,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["slider",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1226,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["source.connect(config",{"_index":371,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service",{"_index":433,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["source.service.ts",{"_index":241,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["source.service.ts:103",{"_index":290,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:116",{"_index":283,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:128",{"_index":292,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:140",{"_index":287,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:153",{"_index":296,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:166",{"_index":299,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:173",{"_index":294,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:180",{"_index":271,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:187",{"_index":270,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:39",{"_index":307,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:41",{"_index":310,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:43",{"_index":262,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":306,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":303,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:90",{"_index":274,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source/data",{"_index":240,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["sources",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["sparc",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["spatial_entity_url",{"_index":438,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialentity",{"_index":323,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["spatialscenenode",{"_index":324,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1248,"title":{},"body":{"index.html":{}}}],["specific",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1247,"title":{},"body":{"index.html":{}}}],["speed",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["stage",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":596,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":1246,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1230,"title":{},"body":{"index.html":{}}}],["start",{"_index":369,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["started",{"_index":517,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":495,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["stay",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["store",{"_index":503,"title":{},"body":{"modules/StoreModule.html":{}}}],["storemodule",{"_index":161,"title":{"modules/StoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":498,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["styling",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1296,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1289,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":313,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["subscriptions",{"_index":247,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["substantial",{"_index":1301,"title":{},"body":{"license.html":{}}}],["super(configstore",{"_index":228,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["support",{"_index":542,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1327,"title":{},"body":{"modules.html":{}}}],["swiper",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["switched",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":334,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["switchmap(([data",{"_index":426,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["switchmap(config",{"_index":347,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["switchmap(db",{"_index":356,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["sync",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["take(1",{"_index":358,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["tap",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["tap((_",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["technologies",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["temporgan['@id",{"_index":456,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["term",{"_index":285,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["test",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["this.cdr.detectchanges",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.choosescene(data",{"_index":428,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('data",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["this.configstate.getoption('data').pipe",{"_index":418,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('highlightid').pipe",{"_index":414,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('zoomtoid').pipe",{"_index":430,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.connectdatasource((resource",{"_index":350,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.createdatasource",{"_index":348,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource",{"_index":339,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.pipe",{"_index":355,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.filterscenenodes(nodes",{"_index":409,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.getneededreferenceorgans(referenceorgans",{"_index":404,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.getneededskins(neededreferenceorgans",{"_index":470,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.injector",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["this.organs",{"_index":407,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.organs$.pipe(take(1)).topromise",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.referenceorgans",{"_index":424,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.referenceorgans$]).pipe",{"_index":402,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.reset",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.scenesource.filteredorgans",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.scenesource.filteredscene$.pipe",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.selectorgans(data",{"_index":419,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.datasource]).pipe",{"_index":425,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getorganscene(organ.representation_of",{"_index":458,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getreferenceorgans",{"_index":421,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getscene",{"_index":454,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.subscriptions.add(this.datasource.subscribe",{"_index":352,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.subscriptions.unsubscribe",{"_index":353,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["through",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":304,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["tissueblockresult",{"_index":325,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["tissues",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["to.operator",{"_index":443,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["to.operator.ts",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["tojsonld",{"_index":235,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tojsonld(data",{"_index":220,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["tool",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1322,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["transparency",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"changelog.html":{}}}],["true",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["try",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1331,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":215,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui.netlify.app",{"_index":1233,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1243,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1240,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":1242,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1241,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":368,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["underlying",{"_index":308,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["uniqueorganurls",{"_index":451,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["uniqueorganurls.size",{"_index":453,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["university",{"_index":1262,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":227,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{}}}],["unnecessary",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":447,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["unselect",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["unsubscribable",{"_index":328,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["unsubscribe",{"_index":367,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["until",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["updates",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":696,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":522,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":329,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["utilities",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":276,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["var",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["variable",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1333,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":627,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["viewchild('bodyui",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["viewer",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataSourceService.html":{}}}],["vs",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1306,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1303,"title":{},"body":{"license.html":{}}}],["wc",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["wc/src/app/app",{"_index":192,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["wc/src/app/app.component.ts",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["wc/src/app/app.component.ts:21",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:23",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:24",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:25",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:27",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:28",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:29",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:31",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:39",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.module.ts",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["wc/src/app/app.module.ts:23",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["wc/src/app/core/constants.ts",{"_index":1080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wc/src/app/core/highlight.operator.ts",{"_index":1082,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["wc/src/app/core/services/data",{"_index":239,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["wc/src/app/core/services/filtered",{"_index":378,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["wc/src/app/core/store/store.module.ts",{"_index":486,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wc/src/app/core/zoom",{"_index":1089,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["webcomponent",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1228,"title":{},"body":{"index.html":{}}}],["week",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1319,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["within",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":651,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["x",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["x_dimension",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["y",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["y_dimension",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["yes",{"_index":277,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["youtube",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["z_dimension",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["zone.js",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilteredSceneService.html":{},"overview.html":{}}}],["zoomto",{"_index":442,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zoomto(id",{"_index":1220,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zoomto(this.zoomtoid",{"_index":412,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["zoomtoid",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-body-ui-wc/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bodyUI\n                            \n                            \n                                    Readonly\n                                data$\n                            \n                            \n                                organs$\n                            \n                            \n                                scene$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                reset\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configState: GlobalConfigState, sceneSource: FilteredSceneService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configState\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sceneSource\n                                                  \n                                                        \n                                                                        FilteredSceneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseLeave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bodyUI\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BodyUiComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('bodyUI', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sceneSource.filteredOrgans$\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { FilteredSceneService } from './core/services/filtered-scene/filtered-scene.service';\nimport { Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BodyUiComponent, GlobalConfigState } from 'ccf-shared';\nimport { take, tap } from 'rxjs/operators';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface GlobalConfig {\n  highlightID?: string;\n  zoomToID?: string;\n  data?: JsonLdObj[];\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('bodyUI', { static: true }) readonly bodyUI!: BodyUiComponent;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  readonly data$ = this.configState.getOption('data');\n  organs$ = this.sceneSource.filteredOrgans$;\n  scene$ = this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly sceneSource: FilteredSceneService,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  private async reset(): Promise {\n    const { bodyUI } = this;\n\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise((resolve) => setTimeout(resolve, 200));\n    const organs = await this.organs$.pipe(take(1)).toPromise();\n    const hasZoomingNode = !!bodyUI.scene?.find((node) => node.zoomToOnLoad) ?? false;\n\n    bodyUI.rotation = 0;\n    bodyUI.rotationX = 0;\n\n    if (!hasZoomingNode) {\n      if (organs.length === 1) {\n        const { x_dimension: x, y_dimension: y, z_dimension: z } = organs[0];\n        bodyUI.bounds = { x: 1.25 * x / 1000, y: 1.25 * y / 1000, z: 1.25 * z / 1000 };\n        bodyUI.target = [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n      } else {\n        bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n        bodyUI.target = [0, 0, 0];\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .body-ui {\n  height: 100%;\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StoreModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/app.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppWebComponent } from './app-web-component.component';\nimport { StoreModule } from './core/store/store.module';\nimport { BodyUiModule } from 'ccf-shared';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    StoreModule,\n    BodyUiModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [],\n  entryComponents: [AppComponent]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-body-ui-wc', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                highlightID\n                            \n                            \n                                zoomToID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         InputDataFormat[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomToID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseLeave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\nimport { environment } from '../environments/environment';\n\n\nexport interface InputDataFormat {\n  id: string;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  rui_location: JsonLdObj;\n}\n\n\nfunction toJsonLd(data: InputDataFormat[]): JsonLdObj[] {\n  return data.map(d => ({\n    '@id': `http://purl.org/ccf/1.5/entity/${d.id}`,\n    '@type': 'http://purl.org/ccf/latest/ccf-entity.owl#Sample',\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity': d.rui_location\n  })) as unknown as JsonLdObj[];\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() data: InputDataFormat[];\n  @Input() highlightID: string;\n  @Input() zoomToID: string;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions']\n      },\n      parse: {\n        data: toJsonLd\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDataSource\n                            \n                            \n                                    Private\n                                createDataSource\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getOrganScene\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locator: LocationStrategy, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locator\n                                                  \n                                                        \n                                                                        LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDataSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDataSource(source: DataSource, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                DataSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createDataSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDataSource()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:180\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:90\n                \n            \n\n\n            \n                \n                    Queries for aggregate values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:116\n                \n            \n\n\n            \n                \n                    Queries for cell type term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:140\n                \n            \n\n\n            \n                \n                    Get the cell type tree model.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:103\n                \n            \n\n\n            \n                \n                    Queries for ontology term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:128\n                \n            \n\n\n            \n                \n                    Get the ontology tree model.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganScene\n                        \n                    \n                \n            \n            \n                \ngetOrganScene(organ: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:153\n                \n            \n\n\n            \n                \n                    Get the reference organs.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:166\n                \n            \n\n\n            \n                \n                    Queries for scene nodes to display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:77\n                \n            \n\n\n            \n                \n                    Queries for tissue block values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:39\n                        \n                    \n\n            \n                \n                    The underlying database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CCFDatabaseOptions\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:41\n                        \n                    \n\n            \n                \n                    Database initialization options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DEFAULT_CCF_DB_OPTIONS } from './../../../../../../ccf-database/src/lib/ccf-database';\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { LocationStrategy } from '@angular/common';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport {\n  AggregateResult,\n  CCFDatabase,\n  CCFDatabaseOptions,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult\n} from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { Remote } from 'comlink';\nimport { Observable, Subscription, Unsubscribable, using } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n\ntype DataSource = Remote | CCFDatabase;\n\n\nfunction compareConfig(previous: CCFDatabaseOptions, current: CCFDatabaseOptions): boolean {\n  return previous === current;\n}\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService implements OnDestroy {\n  /** The underlying database. */\n  dataSource: Observable;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor(\n    private readonly locator: LocationStrategy,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    this.dataSource = globalConfig.getOption('data').pipe(\n      map(data => ({ ...DEFAULT_CCF_DB_OPTIONS, dataSources: data })),\n      filter(config => Object.keys(config).length > 0),\n      map((config) => config as unknown as CCFDatabaseOptions),\n      distinctUntilChanged(compareConfig),\n      switchMap(config => using(\n        () => this.createDataSource(),\n        (resource) => this.connectDataSource((resource as unknown as { source: DataSource }).source, config)\n      )),\n      shareReplay(1)\n    );\n\n    this.subscriptions.add(this.dataSource.subscribe());\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Queries for tissue block values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getTissueBlockResults(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getAggregateResults(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.dataSource.pipe(\n      switchMap(db => db.getOntologyTermOccurences(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for cell type term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.dataSource.pipe(\n      switchMap(db => db.getCellTypeTermOccurences(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Get the ontology tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  getOntologyTreeModel(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getOntologyTreeModel()),\n      take(1)\n    );\n  }\n\n  /**\n   * Get the cell type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  getCellTypeTreeModel(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getCellTypeTreeModel()),\n      take(1)\n    );\n  }\n\n\n  /**\n   * Get the reference organs.\n   *\n   * @returns An observable emitting the results.\n   */\n  getReferenceOrgans(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getReferenceOrgans()),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for scene nodes to display.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getScene(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getScene(filter)),\n      take(1)\n    );\n  }\n\n  getOrganScene(organ: string, filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getReferenceOrganScene(organ, filter)),\n      take(1)\n    );\n  }\n\n  private createDataSource(): { source: DataSource } & Unsubscribable {\n    const unsubscribe: () => void = () => undefined;\n    const source = new CCFDatabase();\n\n    return { source, unsubscribe };\n  }\n\n  private async connectDataSource(source: DataSource, config: CCFDatabaseOptions): Promise {\n    const start = new Date().getTime();\n\n    await source.connect(config, false);\n\n    if (!environment.production) {\n      // eslint-disable-next-line no-console\n      console.info(`Loaded CCF database in ${ ((new Date()).getTime() - start) / 1000 }s`);\n      // eslint-disable-next-line no-console\n      console.log(source);\n    }\n    return source;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilteredSceneService.html":{"url":"injectables/FilteredSceneService.html","title":"injectable - FilteredSceneService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilteredSceneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data$\n                            \n                            \n                                    Readonly\n                                filteredOrgans$\n                            \n                            \n                                    Readonly\n                                filteredScene$\n                            \n                            \n                                    Readonly\n                                highlightID$\n                            \n                            \n                                    Readonly\n                                organs$\n                            \n                            \n                                    Readonly\n                                referenceOrgans$\n                            \n                            \n                                    Readonly\n                                scene$\n                            \n                            \n                                    Readonly\n                                zoomToID$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chooseScene\n                            \n                            \n                                    Private\n                                filterSceneNodes\n                            \n                            \n                                    Private\n                                getNeededReferenceOrgans\n                            \n                            \n                                    Private\n                                getNeededSkins\n                            \n                            \n                                    Private\n                                selectOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configState: GlobalConfigState, source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configState\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        chooseScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    chooseScene(data?: JsonLdObj[], organs?: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            JsonLdObj[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterSceneNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterSceneNodes(nodes: SpatialSceneNode[], organs: Set, referenceOrgans: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    referenceOrgans\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNeededReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNeededReferenceOrgans(referenceOrgans: SpatialEntity[], organs: Set)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referenceOrgans\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNeededSkins\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNeededSkins(organs: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organs\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        selectOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectOrgans(data: Any[] | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Any[] | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.organs$, this.referenceOrgans$]).pipe(\n    map(([organs, referenceOrgans]) => this.getNeededReferenceOrgans(referenceOrgans, organs)),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredScene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.scene$, this.organs$, this.referenceOrgans$]).pipe(\n    map(([nodes, organs, referenceOrgans]) => this.filterSceneNodes(nodes, organs, referenceOrgans)),\n    hightlight(this.highlightID$, HIGHLIGHT_YELLOW),\n    zoomTo(this.zoomToID$),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightID$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('highlightID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data').pipe(\n    map(data => this.selectOrgans(data)),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        referenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.source.getReferenceOrgans()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.data$, this.referenceOrgans$, this.source.dataSource]).pipe(\n    switchMap(([data, referenceOrgans, _]) => this.chooseScene(data, referenceOrgans))\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        zoomToID$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('zoomToID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { SpatialSceneNode, SpatialEntity, Filter } from 'ccf-database';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { DataSourceService } from '../data-source/data-source.service';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { Any } from '@angular-ru/common/typings';\nimport { FEMALE_SKIN_URL, HIGHLIGHT_YELLOW, MALE_SKIN_URL, SPATIAL_ENTITY_URL } from '../../constants';\nimport { hightlight } from '../../highlight.operator';\nimport { GlobalConfig } from '../../../app.component';\nimport { zoomTo } from '../../zoom-to.operator';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilteredSceneService {\n  readonly data$ = this.configState.getOption('data');\n  readonly zoomToID$ = this.configState.getOption('zoomToID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  );\n  readonly highlightID$ = this.configState.getOption('highlightID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  );\n\n  readonly referenceOrgans$ = this.source.getReferenceOrgans();\n\n  readonly scene$ = combineLatest([this.data$, this.referenceOrgans$, this.source.dataSource]).pipe(\n    switchMap(([data, referenceOrgans, _]) => this.chooseScene(data, referenceOrgans))\n  );\n\n  readonly organs$ = this.configState.getOption('data').pipe(\n    map(data => this.selectOrgans(data)),\n    shareReplay(1)\n  );\n\n  readonly filteredOrgans$ = combineLatest([this.organs$, this.referenceOrgans$]).pipe(\n    map(([organs, referenceOrgans]) => this.getNeededReferenceOrgans(referenceOrgans, organs)),\n    shareReplay(1)\n  );\n\n  readonly filteredScene$ = combineLatest([this.scene$, this.organs$, this.referenceOrgans$]).pipe(\n    map(([nodes, organs, referenceOrgans]) => this.filterSceneNodes(nodes, organs, referenceOrgans)),\n    hightlight(this.highlightID$, HIGHLIGHT_YELLOW),\n    zoomTo(this.zoomToID$),\n    shareReplay(1)\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly source: DataSourceService\n  ) { }\n\n  private chooseScene(data?: JsonLdObj[], organs?: SpatialEntity[]): Observable {\n    const organUrls = data?.map(obj => {\n      const block: Any = obj[SPATIAL_ENTITY_URL];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return block?.placement.target;\n    }) ?? [];\n    const uniqueOrganUrls = new Set(organUrls);\n\n    if (uniqueOrganUrls.size > 1) {\n      return this.source.getScene();\n    } else if (organs) {\n      const organ = organs.find(tempOrgan => tempOrgan['@id'] === organUrls[0]);\n      if (organ) {\n        return this.source.getOrganScene(organ.representation_of as string, { ontologyTerms: [organ.reference_organ as string], sex: organ.sex } as Filter);\n      }\n    }\n    return of([]);\n  }\n\n  private selectOrgans(data: Any[] | undefined): Set {\n    const selectOrgan = (item: Any) =>\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      item[SPATIAL_ENTITY_URL].placement.target;\n\n    const organs = (data ?? []).map(selectOrgan);\n    return new Set(organs);\n  }\n\n  private filterSceneNodes(nodes: SpatialSceneNode[], organs: Set, referenceOrgans: SpatialEntity[]): SpatialSceneNode[] {\n    const neededReferenceOrgans = this.getNeededReferenceOrgans(referenceOrgans, organs);\n    const neededSkins = this.getNeededSkins(neededReferenceOrgans);\n    const neededOrgans = new Set([...organs, ...neededSkins]);\n    const filteredNodes = nodes.filter(node => !node.reference_organ || neededOrgans.has(node.reference_organ));\n\n    return filteredNodes;\n  }\n\n  private getNeededReferenceOrgans(referenceOrgans: SpatialEntity[], organs: Set): SpatialEntity[] {\n    return referenceOrgans.filter(organ => organs.has(organ.reference_organ ?? ''));\n  }\n\n  private getNeededSkins(organs: SpatialEntity[]): string[] {\n    if (organs.length === 1) {\n      return [];\n    }\n\n    const skins = new Set();\n    organs.forEach(organ => {\n      if (organ.sex === 'Female') {\n        skins.add(FEMALE_SKIN_URL);\n      } else if (organ.sex === 'Male') {\n        skins.add(MALE_SKIN_URL);\n      }\n    });\n\n    return [...skins];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            highlightID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     JsonLdObj[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JsonLdObj[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilteredSceneService } from './core/services/filtered-scene/filtered-scene.service';\nimport { Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BodyUiComponent, GlobalConfigState } from 'ccf-shared';\nimport { take, tap } from 'rxjs/operators';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface GlobalConfig {\n  highlightID?: string;\n  zoomToID?: string;\n  data?: JsonLdObj[];\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('bodyUI', { static: true }) readonly bodyUI!: BodyUiComponent;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  readonly data$ = this.configState.getOption('data');\n  organs$ = this.sceneSource.filteredOrgans$;\n  scene$ = this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly sceneSource: FilteredSceneService,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  private async reset(): Promise {\n    const { bodyUI } = this;\n\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise((resolve) => setTimeout(resolve, 200));\n    const organs = await this.organs$.pipe(take(1)).toPromise();\n    const hasZoomingNode = !!bodyUI.scene?.find((node) => node.zoomToOnLoad) ?? false;\n\n    bodyUI.rotation = 0;\n    bodyUI.rotationX = 0;\n\n    if (!hasZoomingNode) {\n      if (organs.length === 1) {\n        const { x_dimension: x, y_dimension: y, z_dimension: z } = organs[0];\n        bodyUI.bounds = { x: 1.25 * x / 1000, y: 1.25 * y / 1000, z: 1.25 * z / 1000 };\n        bodyUI.target = [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n      } else {\n        bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n        bodyUI.target = [0, 0, 0];\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputDataFormat.html":{"url":"interfaces/InputDataFormat.html","title":"interface - InputDataFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputDataFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rui_location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_location:     JsonLdObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JsonLdObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\nimport { environment } from '../environments/environment';\n\n\nexport interface InputDataFormat {\n  id: string;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  rui_location: JsonLdObj;\n}\n\n\nfunction toJsonLd(data: InputDataFormat[]): JsonLdObj[] {\n  return data.map(d => ({\n    '@id': `http://purl.org/ccf/1.5/entity/${d.id}`,\n    '@type': 'http://purl.org/ccf/latest/ccf-entity.owl#Sample',\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity': d.rui_location\n  })) as unknown as JsonLdObj[];\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() data: InputDataFormat[];\n  @Input() highlightID: string;\n  @Input() zoomToID: string;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions']\n      },\n      parse: {\n        data: toJsonLd\n      }\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            interface\n            InputDataFormat\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            function\n            toJsonLd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app.component.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            FEMALE_SKIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            HIGHLIGHT_YELLOW\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            MALE_SKIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            SPATIAL_ENTITY_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n            \n            function\n            highlightIfMatching\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n            \n            function\n            hightlight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                70 %\n                (12/17)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n            \n            function\n            compareConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts\n            \n            injectable\n            FilteredSceneService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n            \n            function\n            setZoomToIfMatching\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n            \n            function\n            zoomTo\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.5.7\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.7\n        \n            @math.gl/core : ^3.5.5\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.1\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : ^5.1.1\n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^10.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^6.0.0\n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareConfig   (projects/.../data-source.service.ts)\n                        \n                        \n                            highlightIfMatching   (projects/.../highlight.operator.ts)\n                        \n                        \n                            hightlight   (projects/.../highlight.operator.ts)\n                        \n                        \n                            setZoomToIfMatching   (projects/.../zoom-to.operator.ts)\n                        \n                        \n                            toJsonLd   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            zoomTo   (projects/.../zoom-to.operator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareConfig\n                        \n                    \n                \n            \n            \n                \ncompareConfig(previous, current)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previous\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    current\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightIfMatching\n                        \n                    \n                \n            \n            \n                \nhighlightIfMatching(entity, id, color)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hightlight\n                        \n                    \n                \n            \n            \n                \nhightlight(id, color)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setZoomToIfMatching\n                        \n                    \n                \n            \n            \n                \nsetZoomToIfMatching(entity, id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomTo\n                        \n                    \n                \n            \n            \n                \nzoomTo(id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toJsonLd\n                        \n                    \n                \n            \n            \n                \ntoJsonLd(data)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     JsonLdObj[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Color   (projects/.../highlight.operator.ts)\n                        \n                        \n                            DataSource   (projects/.../data-source.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n    \n    \n        \n            \n                \n                    \n                    Color\n                \n            \n            \n                \n                        [number, number, number, number]\n\n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataSource\n                \n            \n            \n                \n                        Remote | CCFDatabase\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FEMALE_SKIN_URL   (projects/.../constants.ts)\n                        \n                        \n                            HIGHLIGHT_YELLOW   (projects/.../constants.ts)\n                        \n                        \n                            MALE_SKIN_URL   (projects/.../constants.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                        \n                            SPATIAL_ENTITY_URL   (projects/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FEMALE_SKIN_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HIGHLIGHT_YELLOW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color\n\n                    \n                \n                \n                    \n                        Default value : [173, 255, 47, 229.5]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MALE_SKIN_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf.owl#VHMSkin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPATIAL_ENTITY_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
